ggplot(aes(x=Shannon, fill=Group))+
geom_density(alpha=0.6, color="black")+
labs(x="Shannon Index",y="Density")+
guides(fill=guide_legend(title="Group"))+theme_classic()+
facet_grid(vars(`Sample Type`),vars(`Time Point`))
ggsave(path = "C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\plots",
width = 7, height = 5, device='tiff', dpi=300,filename = "densitybygroup_timepoint_sampletype.png")
# trying new things
# DENSITY FUNCTIONS
datamicro %>%
ggplot(aes(x=Shannon, fill=Group))+
geom_density(alpha=0.6, color="black")+
labs(x="",y= "Shannon Index")+
guides(fill=guide_legend(title="Group"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
datamicro %>%
ggplot(aes(x=Shannon, fill=`Sample Type`))+
geom_density(alpha=0.6, color="black")+
labs(x="",y= "Shannon Index")+
guides(fill=guide_legend(title="Sample Type"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)+
scale_fill_discrete(breaks=c("BAL","Induced Sputum"))
datamicro %>%
ggplot(aes(x=Shannon, fill=`Time Point`))+
geom_density(alpha=0.6, color="black")+
labs(x="",y= "Shannon Index")+
guides(fill=guide_legend(title="Time Point"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
#
datamicro %>%
ggplot(aes(x=Shannon))+
geom_density(alpha=0.6, color="black")+
labs(x="",y= "Shannon Index")+
guides(fill=guide_legend(title="Time Point"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)+
facet_grid(Group~ .)
#
datamicro %>%
ggplot(aes(x=Shannon))+
geom_density(alpha=0.6, color="black")+
labs(x="")+
guides(fill=guide_legend(title="Time Point"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)+
facet_grid(Group~ .)
#
datamicro %>%
ggplot(aes(x=Shannon))+
geom_density(alpha=0.6, color="black")+
labs()+
guides(fill=guide_legend(title="Time Point"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)+
facet_grid(Group~ .)
datamicro %>% ggplot(aes(x=Shannon))+
geom_histogram(color="black",fill="white", alpha=0.5, position="identity")+theme_classic()+
geom_density(alpha=0.6)+
facet_wrap(vars(`Sample Type`),vars(`Time Point`))
datamicro %>% ggplot(aes(x=Shannon))+
geom_histogram(color="black",fill="white", alpha=0.5, position="identity")+theme_classic()+
geom_density(alpha=0.6)+
facet_grid(vars(`Sample Type`),vars(`Time Point`))
datamicro %>% ggplot(aes(x=Shannon))+
geom_density(alpha=0.6)+
facet_grid(vars(`Sample Type`),vars(`Time Point`))
datamicro %>% ggplot(aes(x=Shannon,fill=Group))+
geom_density(alpha=0.6)+
facet_grid(vars(`Sample Type`),vars(`Time Point`))
# Density plot with facet grid, 3 variables in one plot
datamicro %>%filter(`Sample Type`!="Saline from BAL") %>%
ggplot(aes(x=Shannon, fill=Group))+
geom_density(alpha=0.6, color="black")+
labs(x="Shannon Index",y="Density")+
guides(fill=guide_legend(title="Group"))+theme_classic()+
facet_grid(vars(`Sample Type`),vars(`Time Point`))
datamicro %>% ggplot(aes(x=Shannon))+
geom_density(alpha=0.6)+
facet_grid(vars(`Sample Type`),vars(`Time Point`),vars(Group))
datamicro %>% ggplot(aes(x=Shannon))+
geom_density(alpha=0.6)+
facet_grid(vars(`Sample Type`),vars(`Time Point`))
datamicro %>% ggplot(aes(x=Shannon,fill=`Sample Type`))+
geom_density(alpha=0.6)+
facet_grid(vars(`Sample Type`),vars(`Time Point`))
datamicro %>% ggplot(aes(x=Shannon,fill=`Sample Type`))+
geom_density(alpha=0.6)+
facet_grid(vars(Group),vars(`Time Point`))
# trying new things
# DENSITY FUNCTIONS
datamicro %>%
ggplot(aes(x=Shannon, fill=Group))+
geom_density(alpha=0.6, color="black")+
labs(x="",y= "Shannon Index")+
guides(fill=guide_legend(title="Group"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
datamicro %>%
ggplot(aes(x=Shannon, fill=`Sample Type`))+
geom_density(alpha=0.6, color="black")+
labs(x="",y= "Shannon Index")+
guides(fill=guide_legend(title="Sample Type"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)+
scale_fill_discrete(breaks=c("BAL","Induced Sputum"))
datamicro %>%
ggplot(aes(x=Shannon, fill=`Time Point`))+
geom_density(alpha=0.6, color="black")+
labs(x="",y= "Shannon Index")+
guides(fill=guide_legend(title="Time Point"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
# Density plot with facet grid, 3 variables in one plot
datamicro %>%filter(`Sample Type`!="Saline from BAL") %>%
ggplot(aes(x=Shannon, fill=Group))+
geom_density(alpha=0.6, color="black")+
labs(x="Shannon Index",y="Density")+
guides(fill=guide_legend(title="Group"))+theme_classic()+
facet_grid(vars(`Sample Type`),vars(`Time Point`))
######################################
########################################
#               data micro             #
########################################
########################################
install.packages("ggpubr")
library(ggpubr)
# trying new things
# DENSITY FUNCTIONS
a<-datamicro %>%
ggplot(aes(x=Shannon, fill=Group))+
geom_density(alpha=0.6, color="black")+
labs(x="",y= "Shannon Index")+
guides(fill=guide_legend(title="Group"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
b<-datamicro %>%
ggplot(aes(x=Shannon, fill=`Sample Type`))+
geom_density(alpha=0.6, color="black")+
labs(x="",y= "Shannon Index")+
guides(fill=guide_legend(title="Sample Type"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)+
scale_fill_discrete(breaks=c("BAL","Induced Sputum"))
c<-datamicro %>%
ggplot(aes(x=Shannon, fill=`Time Point`))+
geom_density(alpha=0.6, color="black")+
labs(x="",y= "Shannon Index")+
guides(fill=guide_legend(title="Time Point"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
# trying new things
# DENSITY FUNCTIONS
a<-datamicro %>%
ggplot(aes(x=Shannon, fill=Group))+
geom_density(alpha=0.6, color="black")+
labs()+
guides(fill=guide_legend(title="Group"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
datamicro %>%
ggplot(aes(x=Shannon, fill=Group))+
geom_density(alpha=0.6, color="black")+
labs()+
guides(fill=guide_legend(title="Group"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
datamicro %>%
ggplot(aes(x=Shannon, fill=Group))+
geom_density(alpha=0.6, color="black")+
labs(x="Shannon Index",y="Density")+
guides(fill=guide_legend(title="Group"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
# trying new things
# DENSITY FUNCTIONS
a<-datamicro %>%
ggplot(aes(x=Shannon, fill=Group))+
geom_density(alpha=0.6, color="black")+
labs(x="Shannon Index",y="Density")+
guides(fill=guide_legend(title="Group"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
b<-datamicro %>%
ggplot(aes(x=Shannon, fill=`Sample Type`))+
geom_density(alpha=0.6, color="black")+
labs(x="Shannon Index",y="Density")+
guides(fill=guide_legend(title="Sample Type"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)+
scale_fill_discrete(breaks=c("BAL","Induced Sputum"))
c<-datamicro %>%
ggplot(aes(x=Shannon, fill=`Time Point`))+
geom_density(alpha=0.6, color="black")+
labs(x="Shannon Index",y="Density")+
guides(fill=guide_legend(title="Time Point"))+theme_classic()+geom_vline(aes(xintercept=mean(Shannon)),
color="black", linetype="dashed", size=0.5)
figure<-ggarrange(a, b, c,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure
figure
figure<-ggarrange(c, ggarrange(b, a, ncol = 2, labels = c("B", "A")),
nrow = 2,
labels = "C"       # Label of the line plot
)
figure
# CON ggarrange podemos unir los gráficos en uno solo
figure<-ggarrange(c, ggarrange(b, a, ncol = 2, labels = c("B", "A"),common.legend = TRUE, legend = "bottom"),
nrow = 2,
labels = "C"       # Label of the line plot
)
figure
# CON ggarrange podemos unir los gráficos en uno solo
figure<-ggarrange(c, ggarrange(b, a, ncol = 2, labels = c("B", "A"),legend = "bottom"),
nrow = 2,
labels = "C"       # Label of the line plot
)
figure
ggsave(path = "C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\plots",
width = 7, height = 7, device='tiff', dpi=300,filename = "separated_densitybygroup_timepoint_sampletype.png")
# CON ggarrange podemos unir los gráficos en uno solo
figure<-ggarrange(c, ggarrange(b, a, ncol = 2, labels = c("B", "C"),legend = "bottom"),
nrow = 2,
labels = "A"       # Label of the line plot
)
figure
ggsave(path = "C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\plots",
width = 7, height = 7, device='tiff', dpi=300,filename = "separated_densitybygroup_timepoint_sampletype.png")
library(psych)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(readxl)
library(ggpubr)
datamicro<-read_xlsx("C:\\Users\\LBarrios\\Documents\\proyectocolombia.xlsx")
library(psych)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(readxl)
library(ggpubr)
datamicro<-read_xlsx("C:\\Users\\LBarrios\\Documents\\proyectocolombia.xlsx")
datamicro<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\Shannonindex.xlsx")
# working with kruskal wallis test
shannon<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\Shannonindex.xlsx")
faith<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\Faith_pd.xlsx")
observed<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\Observed_features.xlsx")
evenness<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\Pielou_evenness.xlsx")
View(shannon)
str(shannon)
kruskal.test(Shannon ~ Group, data = shannon)
shannon$Shannon<-paste0(substr(shannon$Shannon,start = 1,stop = 1),".",substr(shannon$Shannon,start = 2,stop = 4))
shannon$Shannon<-as.numeric(shannon$Shannon)
shannon$Shannon<-round(shannon$Shannon,digits = 2)
# converting from number to labels in sample type
shannon$`Sample Type`<-ifelse( shannon$`Sample Type`==3,"BAL",ifelse(shannon$`Sample Type`==4,"Saline from BAL","Induced Sputum"))
# converting from number to labels in time point
shannon$`Time Point`<-ifelse(shannon$`Time Point`==0,"Admission",ifelse(shannon$`Time Point`==4,"Follow-up (6 months)","ND") )
kruskal.test(Shannon ~ Group, data = shannon)
# by group
install.packages("dunn.test")
# by group
# install.packages("dunn.test")
library(dunn.test)
dunn.test(shannon$Shannon,g = shannon$Group)
pairwise.wilcox.test(x = shannon$Shannon, g = shannon$Group, p.adjust.method = "holm" )
# general test
kruskal.test(Shannon ~ Group, data = shannon)
pairwise.wilcox.test(x = shannon$Shannon, g = shannon$Group, p.adjust.method = "holm" )
library(psych)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(readxl)
library(ggpubr)
braycurtis<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\bray_curtis_distance_matrix.xlsx")
str(braycurtis)
plot(braycurtis)
install.packages("vegan")
library(vegan)
pcoa <- cmdscale (braycurtis, eig = TRUE)
pcoa <- cmdscale (braycurtis, eig = TRUE)
pcoa <- cmdscale(braycurtis, eig = TRUE)
View(braycurtis)
pcoa <- wcmdscale(braycurtis, eig = TRUE)
pcoa <- wcmdscale(braycurtis, eig = TRUE)
ordiplot(braycurtis,display = "sites",type = "text")
install.packages("ape")
library(ape)
pcoa <- wcmdscale(braycurtis, eig = TRUE)
data(varespec)
View(varespec)
View(braycurtis)
View(braycurtis)
View(varespec)
varespec %>%
metaMDS(trace = F) %>%
ordiplot(type = "none") %>%
text("sites")
braycurtis<-braycurtis[-1,]
View(braycurtis)
braycurtis<-braycurtis[-1,]
View(braycurtis)
braycurtis<-braycurtis[,-1]
View(braycurtis)
braycurtis<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\bray_curtis_distance_matrix.xlsx")
braycurtis<-braycurtis[,-1]
pcoa <- wcmdscale(braycurtis, eig = TRUE)
ordiplot(braycurtis,display = "sites",type = "text")
ordiplot(braycurtis,display = "sites",type = "point")
braycurtis %>%
metaMDS(trace = F) %>%
ordiplot(type = "none") %>%
text("sites")
braycurtis %>%
metaMDS(trace = F) %>%
ordiplot(type = "none") %>%
text("")
PCA <- rda(braycurtis, scale = FALSE)
plot(PCA)
PCoA.res<-capscale(braycurtis~1,distance="bray")
plot(PCoA.res)
braycurtis<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\bray_curtis_distance_matrix.xlsx")
PCoA.res<-capscale(braycurtis~1,distance="bray")
braycurtis<-braycurtis[,-1]
PCoA.res<-capscale(braycurtis~1,distance="bray")
scores(PCoA.res,display=�sites�)
scores(PCoA.res,display="sites")
plot(PCoA.res)
library(ape)
View(braycurtis)
braycurtis<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\bray_curtis_distance_matrix.xlsx")
pcoa(braycurtis,correction="none")
braycurtis<-braycurtis[,-1]
pcoa(braycurtis,correction="none")
a<-pcoa(braycurtis,correction="none")
biplot(a)
biplot(braycurtis)
View(a)
pcoa <- cmdscale (eurodist, eig = TRUE)
biplot(pcoa)
braycurtis %>% ggplot()´geom_point()
plot(a)
braycurtis %>% ggplot()´+geom_point()
braycurtis %>% ggplot()+geom_point()
dist <- vegdist(varespec,  method = "bray")
PCOA <- pcoa(dist)
barplot(PCOA$values$Relative_eig[1:10])
PCOA <- pcoa(dist, correction = "cailliez")
biplot.pcoa(PCOA)
biplot.pcoa(PCOA, varespec)
dist <- vegdist(braycurtis,  method = "bray")
PCOA <- pcoa(dist)
barplot(PCOA$values$Relative_eig[1:10])
PCOA <- pcoa(dist, correction = "cailliez")
biplot.pcoa(PCOA)
biplot.pcoa(PCOA, varespec)
braycurtis<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\bray_curtis_distance_matrix.xlsx")
dist <- vegdist(braycurtis,  method = "bray")
braycurtis<-braycurtis[,-1]
dist <- vegdist(braycurtis,  method = "bray")
PCOA <- pcoa(dist)
barplot(PCOA$values$Relative_eig[1:10])
PCOA <- pcoa(dist, correction = "cailliez")
biplot.pcoa(PCOA)
ordiplot (PCOA, type = 't')
ordiplot (PCOA, type = 't')
braycurtis<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\bray_curtis_distance_matrix.xlsx")
#
distance_matrix <- as.dist(braycurtis[,c(2:11)])
print(distance_matrix)
distance_matrix
braycurtis<-read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\bray_curtis_distance_matrix.xlsx")
View(braycurtis)
#
distance_matrix <- as.dist(braycurtis[,c(2:48)])
#
distance_matrix <- as.dist(braycurtis[,c(2:48)])
distance_matrix
print(distance_matrix)
#
library(stats)
my_pcoa <- stats:::cmdscale(distance_matrix)
print(my_pcoa)
plot(my_pcoa)
text(my_pcoa[,1], my_pcoa[,2], labels=rownames(my_pcoa), cex= 1)
plot(my_pcoa)
View(my_pcoa)
ordiplot(my_pcoa,display = "sites",type = "point")
biplot.pcoa(my_pcoa)
PCOA <- pcoa(my_pcoa)
my_pcoa %>%
metaMDS(trace = F) %>%
ordiplot(type = "none") %>%
text("sites")
plot(PCoA.res)
PCoA.res<-capscale(my_pcoa~1,distance="bray")
scores(my_pcoa,display="sites")
plot(my_pcoa)
a<-pcoa(my_pcoa,correction="none")
biplot(my_pcoa)
PCA <- rda(my_pcoa, scale = FALSE)
plot(PCA)
ordiplot(my_pcoa,display = "sites",type = "point")
dist <- vegdist(my_pcoa,  method = "bray")
PCOA <- pcoa(dist)
barplot(PCOA$values$Relative_eig[1:10])
PCOA <- pcoa(dist, correction = "cailliez")
biplot.pcoa()
biplot.pcoa(PCOA, varespec)
plot(my_pcoa)
View(my_pcoa)
NMDS <- metaMDS (my_pcoa)
ordiplot(NMDS,type = "t")
points (NMDS, display = 'sites', cex = goodness (NMDS)*200)
points (my_pcoa, display = 'sites', cex = goodness (NMDS)*200)
biplot.pcoa(PCOA, varespec)
plot(my_pcoa)
names(my_pcoa)[1:2] <- c('PC1', 'PC2')
plot(my_pcoa)
plot(my_pcoa)
text(my_pcoa[,1], my_pcoa[,2], labels=rownames(my_pcoa), cex= 1)
names(my_pcoa)[1:2] <- c('PC1', 'PC2')
View(my_pcoa)
my_pcoa <- as.data.frame(my_pcoa)
View(my_pcoa)
names(my_pcoa)[1:2] <- c('PC1', 'PC2')
View(my_pcoa)
plot(my_pcoa)
my_pcoa %>% ggplot(aes(x = PC1, y = PC2)
my_pcoa %>% ggplot(aes(x = PC1, y = PC2))+geom_point()
my_pcoa %>% ggplot(aes(x = PC1, y = PC2))+geom_point(size=5)
PcoA2D_AT <- cmdscale(EuclDistAT, k =2)
PcoA2D_AT <- cmdscale(braycurtis, k =2)
braycurtis<-braycurtis[,-1]
PcoA2D_AT <- cmdscale(braycurtis, k =2)
PcoA2D_AT <- as.data.frame(PcoA2D_AT)
PcoA2D_AT$Group <- Zeller2014AbundTable$Groups
names(PcoA2D_AT)[1:2] <- c('PC1', 'PC2')
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442",
"#0072B2", "#D55E00", "#CC79A7")
Tr_PcoA <- ggplot(PcoA2D_AT, aes(x = PC1, y = PC2, colour = Group,
label = row.names(PcoA2D_AT)))
Tr_PcoA + geom_point(size =5) +
scale_colour_manual(values = cbPalette[2:3]) +
geom_text(col = 'black')
Tr_PcoA <- ggplot(PcoA2D_AT, aes(x = PC1, y = PC2,
label = row.names(PcoA2D_AT)))
Tr_PcoA + geom_point(size =5) +
scale_colour_manual(values = cbPalette[2:3]) +
geom_text(col = 'black')
View(Tr_PcoA)
plot(my_pcoa)
View(pcoa)
View(my_pcoa)
df <- read_xlsx("C:\\Users\\LBarrios\\Desktop\\Articulo_micro_colombia\\workfiles\\bray_curtis_distance_matrix.xlsx")
names(df)[1] <- "sample_id"
df_factor <- data.frame(do.call("rbind", strsplit(as.character(df$sample_id), "-", fixed = T)))
df_factor <- df_factor[,-c(4,5)]
df_factor$patient <- paste(df_factor$X1, df_factor$X2, sep = "_")
df_factor$group <- df_factor$X1
df_factor <- df_factor[,-c(1,2)]
df_factor_bis <- data.frame(do.call("rbind", strsplit(df_factor$X3, "", fixed = T)))
df_factor$time_point <- df_factor_bis$X1
df_factor$sample_type <- df_factor_bis$X2
df_factor <- df_factor[,-1]
df_factor <- df_factor %>%
mutate(group = case_when(
group %in% "4" ~ "HIV + CAP",
group %in% "5" ~ "CAP",
group %in% "6" ~ "HIV"
))
df <- df[,-1]
df <- base::lapply(df, as.numeric)
df <- as.data.frame(df)
df_complete <- cbind(df_factor, df)
df_timepoint0 <- subset(df_complete, df_complete$time_point == "0")
df_timepoint0_factor <- df_timepoint0[,c(1:4)]
df_timepoint0 <- df_timepoint0[,-c(1:4)]
# Compute PCA
res.pca_macro <- prcomp(df_timepoint0)
# Visualize eigenvalues (scree plot). Show the percentage of variances
# explained by each principal component.
fviz_eig(res.pca_macro)
# Eigenvalues
get_eigenvalue(res.pca_macro)
# Data for biplot
res.ind_macro <- get_pca_ind(res.pca_macro)
res.var_macro <- get_pca_var(res.pca_macro)
data_biplot_ind <- data.frame(res.ind_macro$coord, Group = df_timepoint0_factor$group)
data_biplot_var <- data.frame(res.var_macro$coord, variable = rownames(res.var_macro$coord))
smry <- summary(res.pca_macro)
smry
ppexp <- smry$importance
ppexp
ppexp <- as.data.frame(ppexp[-c(1,3),c(1:2)])
ppexp1 <- ppexp[1,]*100
ppexp2 <- ppexp[2,]*100
plot_theme_PCA <- theme(axis.line = element_line(size = 1, colour = "black"),
axis.ticks = element_line(size = 1, colour = "black"),
axis.ticks.length = unit(.2, "cm"),
axis.text = element_text(colour = "black", face = "bold", size = 14),
axis.title = element_text(colour = "black", face = "bold", size = 16),
axis.text.y = element_text(vjust = 0.35),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
legend.background = element_blank(),
legend.key = element_blank(),
legend.title = element_text(colour = "black", face = "bold", size = 15),
legend.text = element_text(colour = "black", size = 13),
legend.key.size = unit(.6, "cm"),
title = element_text(colour = "black", face = "bold", size = 19))
# Biplot of individuals and variables
ggplot(data_biplot_ind, aes(x = Dim.1, y = Dim.2)) +
# Plot sites
geom_point(data = data_biplot_ind,
aes(color = Group), size = 4) +
# Format Triplot
plot_theme_PCA +
ylab(as.character(as.expression(paste("PCA 2, proportion expl.: ",round(ppexp2, 2), "%")))) +
xlab(as.character(as.expression(paste("PCA 1, proportion expl.: ",round(ppexp1, 2), "%"))))
